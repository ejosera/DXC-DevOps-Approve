# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# None: No ejecuta el pipeline con cada commit de github
trigger: none

pool:
  vmImage: ubuntu-latest

variables:
  bkstrgrg: "terraformtfstate"
  bkstrg: "terraformtfstatecicd"
  bkcontainer: "tfstate"
  bkstrgkey: "terraformcicd"


stages:
  - stage: tfdeploy
    jobs:
      - job: apply
        steps:
          - task: TerraformInstaller@1
            displayName: tfinstall
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTaskV4@4
            displayName: init
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'Visual Studio Enterprise(4abab78e-cc44-4dc6-b6c0-35280c169a76)'
              backendAzureRmResourceGroupName: '$(bkstrgrg)'
              backendAzureRmStorageAccountName: '$(bkstrg)'
              backendAzureRmContainerName: '$(bkcontainer)'
              backendAzureRmKey: '$(bkstrgkey)'
          - task: TerraformTaskV4@4
            displayName: plan
            inputs:
              provider: 'azurerm'
              command: 'plan'
              environmentServiceNameAzureRM: 'DevTestServiceConnection'
          - task: TerraformTaskV4@4
            displayName: destroy
            inputs:
              provider: 'azurerm'
              command: 'destroy'
              environmentServiceNameAzureRM: 'DevTestServiceConnection'
                
          
